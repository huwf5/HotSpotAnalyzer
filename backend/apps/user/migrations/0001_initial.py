# Generated by Django 5.0.6 on 2024-05-23 08:30

import apps.user.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailSuffixFormat',
            fields=[
                ('format', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True, verbose_name='email format')),
            ],
            options={
                'db_table': 'hotspot_sys_email_format',
            },
        ),
        migrations.CreateModel(
            name='EmailTag',
            fields=[
                ('tag', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True, verbose_name='email tag')),
            ],
            options={
                'db_table': 'hotspot_sys_email_tag',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('Super Admin', 'Super Admin'), ('Admin', 'Admin'), ('User', 'User')], max_length=12, verbose_name='Role')),
            ],
            options={
                'db_table': 'hotspot_sys_role',
            },
        ),
        migrations.CreateModel(
            name='WaitingList',
            fields=[
                ('email', models.EmailField(db_index=True, max_length=254, primary_key=True, serialize=False, unique=True, verbose_name='email')),
                ('username', models.CharField(max_length=24, verbose_name='username')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('verify_code', models.CharField(blank=True, max_length=6, null=True, verbose_name='verify code')),
                ('is_verified', models.BooleanField(default=False, verbose_name='is verified')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expired_at', models.DateTimeField(verbose_name='expired at')),
            ],
            options={
                'db_table': 'hotspot_sys_waiting_list',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(db_index=True, max_length=254, primary_key=True, serialize=False, unique=True, validators=[apps.user.models.check_email_suffix_format], verbose_name='email')),
                ('username', models.CharField(max_length=24, verbose_name='username')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.role')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'hotspot_sys_user',
            },
            managers=[
                ('objects', apps.user.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EmailFormatTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_format', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.emailsuffixformat')),
                ('email_tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.emailtag')),
            ],
            options={
                'db_table': 'hotspot_sys_email_format_tag',
                'unique_together': {('email_format', 'email_tag')},
            },
        ),
    ]
