# Generated by Django 5.0.6 on 2024-06-25 08:20

import apps.user.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "email",
                    models.EmailField(
                        db_index=True,
                        max_length=254,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        validators=[django.core.validators.EmailValidator()],
                        verbose_name="email",
                    ),
                ),
                ("username", models.CharField(max_length=24, verbose_name="username")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "db_table": "hotspot_sys_user",
            },
            managers=[
                ("objects", apps.user.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="EmailSuffixFormat",
            fields=[
                (
                    "format",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        validators=[apps.user.models.validate_format],
                        verbose_name="email format",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
            ],
            options={
                "db_table": "hotspot_sys_email_format",
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="event title")),
                (
                    "summary",
                    models.CharField(max_length=255, verbose_name="event summary"),
                ),
                ("negative_sentiment_ratio", models.FloatField(default=0.0)),
                ("is_news", models.BooleanField(default=False, verbose_name="is news")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "hotspot_sys_message",
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("Super Admin", "Super Admin"),
                            ("Admin", "Admin"),
                            ("User", "User"),
                        ],
                        max_length=12,
                        verbose_name="Role",
                    ),
                ),
            ],
            options={
                "db_table": "hotspot_sys_role",
            },
        ),
        migrations.CreateModel(
            name="WaitingList",
            fields=[
                (
                    "email",
                    models.EmailField(
                        db_index=True,
                        max_length=254,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="email",
                    ),
                ),
                ("username", models.CharField(max_length=24, verbose_name="username")),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "hotspot_sys_waiting_list",
            },
        ),
        migrations.CreateModel(
            name="UserMessageSettings",
            fields=[
                (
                    "email",
                    models.OneToOneField(
                        db_column="email",
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("allow_non_news", models.BooleanField(default=True)),
                ("warning_threshold", models.FloatField(default=0.7)),
                ("info_threshold", models.FloatField(default=0.5)),
            ],
            options={
                "db_table": "hotspot_sys_user_message_settings",
            },
        ),
        migrations.CreateModel(
            name="EmailVerification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        db_index=True, max_length=254, verbose_name="email"
                    ),
                ),
                (
                    "verify_code",
                    models.CharField(
                        blank=True, max_length=6, null=True, verbose_name="verify code"
                    ),
                ),
                (
                    "usage",
                    models.CharField(
                        choices=[
                            ("register", "register"),
                            ("reset_password", "reset_password"),
                        ],
                        max_length=255,
                        verbose_name="usage: ['register', 'reset_password']",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expired_at", models.DateTimeField(verbose_name="expired at")),
            ],
            options={
                "db_table": "hotspot_sys_email_verification",
                "unique_together": {("email", "usage")},
            },
        ),
        migrations.AddField(
            model_name="user",
            name="role",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="user.role"
            ),
        ),
        migrations.CreateModel(
            name="EmailFormatTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email_tag",
                    models.CharField(max_length=255, verbose_name="email tag"),
                ),
                (
                    "email_format",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user.emailsuffixformat",
                    ),
                ),
            ],
            options={
                "db_table": "hotspot_sys_email_format_tag",
                "unique_together": {("email_format", "email_tag")},
            },
        ),
        migrations.CreateModel(
            name="UserMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("warning", "warning"), ("info", "info")],
                        max_length=255,
                        verbose_name="message type",
                    ),
                ),
                ("is_read", models.BooleanField(default=False)),
                ("is_starred", models.BooleanField(default=False)),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="user.message"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "hotspot_sys_user_message",
                "unique_together": {("user", "message")},
            },
        ),
    ]
